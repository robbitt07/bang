# Generated by Django 2.2.10 on 2020-08-08 02:55

import dag.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.functions.text


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('appadmin', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DAG',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dag_name', models.CharField(max_length=50)),
                ('dag_hash', models.CharField(blank=True, db_index=True, max_length=40)),
                ('initial_run_time', models.DateTimeField()),
                ('repeat', models.BigIntegerField(default=0)),
                ('active_status', models.BooleanField(default=True)),
                ('run_in_progress', models.BooleanField(default=False)),
                ('run_at', models.DateTimeField(blank=True, null=True)),
                ('has_error', models.BooleanField(default=False)),
                ('last_error', models.TextField(blank=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('job_owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dags', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'DAG',
                'verbose_name_plural': 'DAGs',
                'db_table': 'dag_dag',
                'ordering': ['run_at'],
            },
        ),
        migrations.CreateModel(
            name='DAGItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_name', models.CharField(max_length=250, unique=True)),
                ('item_type', models.CharField(blank=True, choices=[('SCRIPT', 'Script Internal'), ('PATH', 'Path to Script')], default='SCRIPT', max_length=50, null=True)),
                ('job_script', models.TextField(blank=True, null=True)),
                ('job_key_arguments', models.TextField(blank=True, null=True)),
                ('script_full_path', models.CharField(blank=True, max_length=1000, null=True)),
                ('active_status', models.BooleanField(default=True)),
                ('run_in_progress', models.BooleanField(default=False)),
                ('has_error', models.BooleanField(default=False)),
                ('last_error', models.TextField(blank=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('dag', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dag_items', to='dag.DAG')),
                ('job_owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dag_items', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='dag.DAGItem')),
            ],
            options={
                'verbose_name': 'DAG Item',
                'verbose_name_plural': 'DAG Items',
                'db_table': 'dag_item',
            },
        ),
        migrations.CreateModel(
            name='DAGItemLogging',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('run_hash', models.CharField(blank=True, db_index=True, max_length=40)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('dag_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='dag.DAGItem')),
            ],
            options={
                'verbose_name': 'DAG Item Logging',
                'verbose_name_plural': 'DAG Items Logging',
                'db_table': 'dag_item_logging',
                'ordering': ['-created_on'],
            },
        ),
        migrations.CreateModel(
            name='DAGProcess',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pid', models.IntegerField(blank=True, null=True)),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('dag', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='current_process', to='dag.DAG')),
            ],
            options={
                'verbose_name': 'DAG Process',
                'verbose_name_plural': 'DAG Process',
                'db_table': 'dag_process',
                'ordering': [django.db.models.functions.text.Lower('dag__dag_name')],
            },
        ),
        migrations.CreateModel(
            name='LoggingEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('log_metric', models.CharField(max_length=250)),
                ('log_value', models.DecimalField(decimal_places=2, max_digits=20)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('dag_item_logging', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='dag.DAGItemLogging')),
            ],
            options={
                'verbose_name': 'DAG Item Logging Event',
                'verbose_name_plural': 'DAG Items Logging Events',
                'db_table': 'dag_item_logging_event',
                'ordering': ['dag_item_logging', 'created_on'],
            },
        ),
        migrations.CreateModel(
            name='DAGProcessStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pid_running', models.IntegerField(blank=True, null=True)),
                ('memory_consumption', models.DecimalField(decimal_places=4, max_digits=10)),
                ('cpu_consumption', models.DecimalField(decimal_places=4, max_digits=10)),
                ('child_processes', models.IntegerField(blank=True, null=True)),
                ('observed_time', models.DateTimeField(auto_now_add=True)),
                ('dag_process', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dag.DAGProcess')),
            ],
            options={
                'verbose_name': 'DAG Process Status',
                'verbose_name_plural': 'DAG Process Status',
                'db_table': 'dag_process_status',
                'ordering': ['-observed_time'],
            },
        ),
        migrations.CreateModel(
            name='DagItemHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version_number', models.IntegerField()),
                ('script_text', models.TextField(blank=True, null=True)),
                ('script_diff_text', models.TextField(blank=True, null=True)),
                ('script_diff_list', models.TextField(blank=True, null=True)),
                ('version_datetime', models.DateTimeField(auto_now_add=True)),
                ('dag_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='version_history', to='dag.DAGItem')),
                ('user_edit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dag_item_version_history', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'DAG Item Version History',
                'verbose_name_plural': 'DAG Items Version History',
                'db_table': 'dag_item_version_history',
                'ordering': ['dag_item', '-version_number'],
            },
        ),
        migrations.CreateModel(
            name='DAGDependency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sub_module', models.CharField(blank=True, max_length=50, null=True)),
                ('dag_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dependencies', to='dag.DAGItem')),
                ('package', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dag_items', to='appadmin.ProcessPackages')),
            ],
            options={
                'verbose_name': 'DAG Dependency',
                'verbose_name_plural': 'DAG Dependencies',
                'db_table': 'dag_item_dependency',
                'ordering': [django.db.models.functions.text.Lower('package__package_name')],
            },
        ),
        migrations.CreateModel(
            name='DAGAsset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dag_asset', models.FileField(blank=True, null=True, upload_to=dag.models.dag_asset_name)),
                ('notes', models.CharField(blank=True, max_length=1000, null=True)),
                ('dag_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assets', to='dag.DAGItem')),
            ],
            options={
                'verbose_name': 'DAG Asset',
                'verbose_name_plural': 'DAG Assets',
                'db_table': 'dag_item_asset',
                'unique_together': {('dag_item', 'dag_asset')},
            },
        ),
    ]
